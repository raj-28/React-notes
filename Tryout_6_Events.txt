Event handling
==============
1. Create a component Events.js with below code
	export default class Events extends React.Component {
	  render() {
		return (
		  <React.Fragment>
			<h2>Event Handling Demo</h2>
		  </React.Fragment>
		);
	  }
	}


2. Add it to navigation

3. Update the code in Events.js as shown:
	import React from "react";

	export default class Events extends React.Component {
	  constructor() {
		super();
		this.withTraditional = this.withTraditional.bind(this);
	  }

	  withTraditional() {
		alert(
		  "Event handler with traditional function. Has to be bound in constructor"
		);
	  }

	  withArrow = () => {
		alert(
		  "Event handler with arrow function. No need to be bound in constructor"
		);
	  };

	  withParameter = (param) => {
		alert(
		  "Received parameter: " +
			param +
			"\n Check the code to see how it is passed."
		);
	  };
	  render() {
		return (
		  <React.Fragment>
			<h2>Event Handling Demo</h2>
			<div className="btn-group" role="group" ariaLabel="Event button group">
			  <button
				type="button"
				className="btn btn-secondary"
				onClick={this.withTraditional}
			  >
				With Traditional Function
			  </button>
			  <button
				type="button"
				className="btn btn-secondary"
				onClick={this.withArrow}
			  >
				With Arrow Function
			  </button>
			  <button
				type="button"
				className="btn btn-secondary"
				onClick={() => this.withParameter("Hello")}
			  >
				Arrow Function with Parameter
			  </button>
			</div>
		  </React.Fragment>
		);
	  }
	}


NOTE:
In class components, the this keyword is not defined by default, so with 
regular functions the this keyword represents the object that called the method, 
which can be the global window object, a HTML button, or whatever.

With arrow functions, this will always represent the object that defined the arrow function.

If you must use regular functions instead of arrow functions you have to bind this to the 
component instance using the bind() method

You can handle events in function components too. 